/* ---------------------------------------------------------------------------- */
/* Mixins */
/* ---------------------------------------------------------------------------- */

// Links color
@mixin title_color($normal: black, $hover: $main_color) {
  a { color: $normal;
    &:hover { color: $hover; }
  }
}

/* ----- Clearfixin' ----- */

.clear,
.container {
  zoom: 1;

  &:before,
  &:after {
    content: "";
    display: table;
  }

  &:after {
    clear: both;
  }
}

/*

	margin & padding.fab 0.3

*/

// Container max-width
$container_mw: 1920;

// Default margin & padding value
$mp: 30;

// Breakpoints
$mp_breakpoints:
        1024 1.5,
        800 2,
;


@function mp_vw($var) {
  @return #{$var/$container_mw*100}vw;
}
@function mp_ratio_vw($var, $ratio) {
  @return #{$var/$container_mw*100*$ratio}vw;
}

// STRIP UNITS
@function strip-unit($value) {
  @return $value / ($value * 0 + 1)
}

// PX to EM (kind of)
// divide by 16 by default
@function font_size($pixels, $context: 15) {
  @return #{strip-unit($pixels/$context)}em
}


//PADDING
@mixin padding($top: $mp, $right: $mp, $bottom: $mp, $left: $mp) {
  padding: mp_vw($top) mp_vw($right) mp_vw($bottom) mp_vw($left);
  @each $mp_breakpoint in $mp_breakpoints {
    $bpvalue: nth($mp_breakpoint, 1);
    $ratio: nth($mp_breakpoint, 2);
    @media all and (max-width: #{$bpvalue}px) {
      padding: mp_ratio_vw($top, $ratio) mp_ratio_vw($right, $ratio) mp_ratio_vw($bottom, $ratio) mp_ratio_vw($left, $ratio);
    }
  }
}
@mixin padding-top($var: $mp, $ratio: 2) {
  padding-top: mp_vw($var);
  @each $mp_breakpoint in $mp_breakpoints {
    $bpvalue: nth($mp_breakpoint, 1);
    $ratio: nth($mp_breakpoint, 2);
    @media all and (max-width: #{$bpvalue}px) {
      padding-top: mp_ratio_vw($var, $ratio);
    }
  }
}
@mixin padding-right($var: $mp, $ratio: 2) {
  padding-right: mp_vw($var);
  @each $mp_breakpoint in $mp_breakpoints {
    $bpvalue: nth($mp_breakpoint, 1);
    $ratio: nth($mp_breakpoint, 2);
    @media all and (max-width: #{$bpvalue}px) {
      padding-right: mp_ratio_vw($var, $ratio);
    }
  }
}
@mixin padding-bottom($var: $mp, $ratio: 2) {
  padding-bottom: mp_vw($var);
  @each $mp_breakpoint in $mp_breakpoints {
    $bpvalue: nth($mp_breakpoint, 1);
    $ratio: nth($mp_breakpoint, 2);
    @media all and (max-width: #{$bpvalue}px) {
      padding-bottom: mp_ratio_vw($var, $ratio);
    }
  }
}
@mixin padding-left($var: $mp, $ratio: 2) {
  padding-left: mp_vw($var);
  @each $mp_breakpoint in $mp_breakpoints {
    $bpvalue: nth($mp_breakpoint, 1);
    $ratio: nth($mp_breakpoint, 2);
    @media all and (max-width: #{$bpvalue}px) {
      margin-left: mp_ratio_vw($var, $ratio);
    }
  }
}

//MARGIN
@mixin margin($top: $mp, $right: $mp, $bottom: $mp, $left: $mp, $ratio: 2) {
  margin: mp_vw($top) mp_vw($right) mp_vw($bottom) mp_vw($left);
  @each $mp_breakpoint in $mp_breakpoints {
    $bpvalue: nth($mp_breakpoint, 1);
    $ratio: nth($mp_breakpoint, 2);
    @media all and (max-width: #{$bpvalue}px) {
      margin: mp_ratio_vw($top, $ratio) mp_ratio_vw($right, $ratio) mp_ratio_vw($bottom, $ratio) mp_ratio_vw($left, $ratio);
    }
  }
}
@mixin margin-top($var: $mp, $ratio: 2) {
  margin-top: mp_vw($var);
  @each $mp_breakpoint in $mp_breakpoints {
    $bpvalue: nth($mp_breakpoint, 1);
    $ratio: nth($mp_breakpoint, 2);
    @media all and (max-width: #{$bpvalue}px) {
      margin-top: mp_ratio_vw($var, $ratio);
    }
  }
}
@mixin margin-right($var: $mp, $ratio: 2) {
  margin-right: mp_vw($var);
  @each $mp_breakpoint in $mp_breakpoints {
    $bpvalue: nth($mp_breakpoint, 1);
    $ratio: nth($mp_breakpoint, 2);
    @media all and (max-width: #{$bpvalue}px) {
      margin-right: mp_ratio_vw($var, $ratio);
    }
  }
}
@mixin margin-bottom($var: $mp, $ratio: 2) {
  margin-bottom: mp_vw($var);
  @each $mp_breakpoint in $mp_breakpoints {
    $bpvalue: nth($mp_breakpoint, 1);
    $ratio: nth($mp_breakpoint, 2);
    @media all and (max-width: #{$bpvalue}px) {
      margin-bottom: mp_ratio_vw($var, $ratio);
    }
  }
}
@mixin margin-left($var: $mp, $ratio: 2) {
  margin-left: mp_vw($var);
  @each $mp_breakpoint in $mp_breakpoints {
    $bpvalue: nth($mp_breakpoint, 1);
    $ratio: nth($mp_breakpoint, 2);
    @media all and (max-width: #{$bpvalue}px) {
      margin-left: mp_ratio_vw($var, $ratio);
    }
  }
}

/* ---------------------------------------------------------------------------- */
/* Placeholder selectors */
/* ---------------------------------------------------------------------------- */

// Vertical align
%vertical-align {
  position: relative;
  top: 50%;
}

.valign {
  position: relative;
  top: 50%;
}


@mixin visuallyhidden {
  top:0;
}

.hidden{
  display:none !important;
}

.todo {
  color:red;
}

.image-container{
  position: relative;
}
.photo-container{
  float: left;
  position: relative;
  overflow: hidden;
}
.image-thumb{
  position: relative;
  background-color: #eee;
}